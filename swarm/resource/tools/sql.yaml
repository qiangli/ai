###
kit: "pg"

tools:
  - name: "db_query"
    description: "Run query against the database"
    parameters:
      type: "object"
      properties:
        database:
          type: "string"
          description: "Database name to connect to (optional, if not provided will use default)"
        query:
          type: "string"
          description: "SELECT SQL query to run"
      required:
        - query
    body: "{{.query}}"
    type: "sql"

  - name: "db_version"
    description: "Gather database version information"
    parameters: {}
    body: "SELECT version()"
    type: "sql"

  - name: "db_all_databases"
    description: "List all available databases"
    parameters: {}
    body: "SELECT datname FROM pg_database WHERE datistemplate = false AND datallowconn = true"
    type: "sql"

  - name: "db_all_tables"
    description: "List all tables in the database"
    parameters:
      type: "object"
      properties:
        database:
          type: "string"
          description: "Database name to connect to (optional, if not provided will use default)"
    body: |
      SELECT schemaname, tablename
      FROM pg_tables
      WHERE schemaname NOT IN ('pg_catalog', 'information_schema')
    type: "sql"

  - name: "db_all_views"
    description: "List all views in the database"
    parameters:
      type: "object"
      properties:
        database:
          type: "string"
          description: "Database name to connect to (optional, if not provided will use default)"
    body: |
      SELECT schemaname, viewname
      FROM pg_views
      WHERE schemaname NOT IN ('pg_catalog', 'information_schema')
    type: "sql"

  - name: "db_all_sequences"
    description: "List all sequences in the database"
    parameters:
      type: "object"
      properties:
        database:
          type: "string"
          description: "Database name to connect to (optional, if not provided will use default)"
    body: |
      SELECT schemaname, sequencename
      FROM pg_sequences
      WHERE schemaname NOT IN ('pg_catalog', 'information_schema')
    type: "sql"

  - name: "db_all_columns"
    description: "List all columns in a table"
    parameters:
      type: "object"
      properties:
        database:
          type: "string"
          description: "Database name to connect to (optional, if not provided will use default)"
        schema:
          type: "string"
          description: "Schema name"
        table:
          type: "string"
          description: "Table name"
      required:
        - schema
        - table
    body: |
      SELECT table_schema, table_name, column_name, data_type, is_nullable, column_default
      FROM information_schema.columns
      WHERE table_schema = '{{.schema}}' AND table_name = '{{.table}}'
      AND table_schema NOT IN ('pg_catalog', 'information_schema')
      ORDER BY table_schema, table_name, ordinal_position
    type: "sql"
