###
kit: "git"
# commands: ["git"]

tools:
  - name: "git"
    description: |
      Git is a revision control system with an unusually rich command set that provides
      both high-level operations and full access to internals.
      'git help -a' for a list of available commands.
    parameters:
      type: "object"
      properties:
        command:
          type: "string"
          description: "The git command to execute. 'git help <command>' for more information about a specific command"
        args:
          type: "array"
          items:
            type: "string"
          description: "Additional options or arguments"
      required:
        - command
    body: "git {{.command}} {{spread .args}}"
    type: "shell"
  
  - name: "status"
    description: "Show the working tree status"
    parameters: {}
    body: 'git status'
    type: "shell"

  - name: "diff_unstaged"
    description: "Show changes in the working directory that are not yet staged"
    parameters: {}
    body: 'git diff'
    type: "shell"

  - name: "diff_staged"
    description: "Show changes that are staged for commit"
    parameters: {}
    body: 'git diff --cached'
    type: "shell"

  - name: "diff"
    description: "Show differences between branches or commits"
    parameters:
      type: "object"
      properties:
        target:
          type: "string"
          description: "Target branch or commit to diff against"
      required:
        - target
    body: 'git diff "{{.target}}"'
    type: "shell"

  - name: "commit"
    description: "Record changes to the repository"
    parameters:
      type: "object"
      properties:
        message:
          type: "string"
          description: "Commit message"
      required:
        - message
    body: 'git commit -m "{{.message}}"'
    type: "shell"
  
  - name: "amend"
    description: "Amend the last commit with new changes"
    parameters:
      type: "object"
      properties:
        message:
          type: "string"
          description: "New commit message to replace the last one"
      required:
        - message
    body: 'git commit --amend -m "{{.message}}"'
    type: "shell"

  # - name: "add"
  #   description: "Add file contents to the staging area"
  #   parameters:
  #     type: "object"
  #     properties:
  #       files:
  #         type: "array"
  #         items:
  #           type: "string"
  #         description: "Files to add to staging"
  #     required:
  #       - files
  #   body: 'git add {{spread .files}}'
  #   type: "shell"

  # - name: "reset"
  #   description: "Unstage all staged changes"
  #   parameters: {}
  #   body: 'git reset'
  #   type: "shell"

  - name: "log"
    description: "Show the commit logs"
    parameters:
      type: "object"
      properties:
        max_count:
          type: "integer"
          description: "Maximum number of commits to show"
          default: 10
    body: 'git log --max-count {{(default 10 .max_count)}}'
    type: "shell"

  # - name: "create_branch"
  #   description: "Creates a new branch from an optional base branch"
  #   parameters:
  #     type: "object"
  #     properties:
  #       branch_name:
  #         type: "string"
  #         description: "Name of the new branch"
  #       base_branch:
  #         type: "string"
  #         description: "Base branch to create new branch from"
  #     required:
  #       - branch_name
  #   body: 'git checkout -b {{.branch_name}} {{(default "HEAD" .base_branch)}}'
  #   type: "shell"

  # - name: "checkout"
  #   description: "Switch branches"
  #   parameters:
  #     type: "object"
  #     properties:
  #       branch_name:
  #         type: "string"
  #         description: "Branch to checkout"
  #     required:
  #       - branch_name
  #   body: 'git checkout {{.branch_name}}'
  #   type: "shell"

  - name: "show"
    description: "Show the contents of a commit"
    parameters:
      type: "object"
      properties:
        revision:
          type: "string"
          description: "Revision or commit to show"
      required:
        - revision
    body: 'git show {{.revision}}'
    type: "shell"

  # - name: "init"
  #   description: "Initialize a new Git repository"
  #   parameters:
  #     type: "object"
  #     properties:
  #       directory:
  #         type: "string"
  #         description: "Path where the new repository will be initialized"
  #     required:
  #       - repo_path
  #   body: 'git init {{.directory}}'
  #   type: "shell"

  # - name: "clone"
  #   description: "Clone a repository into a new directory"
  #   parameters:
  #     type: "object"
  #     properties:
  #       repo_url:
  #         type: "string"
  #         description: "URL of the repository to clone"
  #       directory:
  #         type: "string"
  #         description: "Directory where the repository will be cloned"
  #     required:
  #       - repo_url
  #   body: 'git clone {{.repo_url}} {{(default "."" .directory)}}'
  #   type: "shell"
  
  # - name: "pull"
  #   description: "Fetch from and integrate with another repository or a local branch"
  #   parameters:
  #     type: "object"
  #     properties:
  #       remote:
  #         type: "string"
  #         description: "Remote repository to pull from"
  #       branch:
  #         type: "string"
  #         description: "Branch to pull from"
  #     required:
  #       - remote
  #   body: 'git pull {{.remote}} {{(default "main" .branch)}}'
  #   type: "shell"

  # - name: "stash"
  #   description: "Stash the changes in a dirty working directory away"
  #   parameters: {}
  #   body: 'git stash'
  #   type: "shell"